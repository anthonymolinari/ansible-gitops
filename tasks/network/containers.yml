---

- name: create network for all services
  docker_network:
    name: traefik

- name: create network for prefect
  docker_network:
    name: prefect

# traefik 
- name: traefik reverse proxy
  docker_container:
    name: traefik
    image: traefik:v2.11
    ports:
      - "80:80"
      - "81:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    command: ["--api.insecure=true", "--providers.docker"]
    networks:
      - name: "traefik"
    restart_policy: unless-stopped

- name: node_exporter container
  docker_container:
    name: node_exporter
    image: prom/node-exporter:v1.9.0
    command: ["--path.rootfs=/host"]
    ports:
      - "9100:9100"
    volumes:
      - "/:/host:ro,rslave"
    networks:
      - name: "traefik"
    restart_policy: unless-stopped

#- name: grafana
# docker_container:
#   name: grafana
#   image: grafana/grafana:11.4.0
#   user:
#     - "1000:1000"
#   ports:
#     - "3000:3000"
#   volumes:
#     - "{{ docker_path }}/grafana/data:/var/lib/grafana"
#   restart_policy: unless-stopped

# Bind DNS
#- name: bind docker container
# docker_container:
#   name: bind-dns
#   image: ubuntu/bind9@sha256:53d1951a13f9311d6e340d8edaae75db3b47c2b65e8a14308fff4fdd17720e01
#   volumes:
#     - "/home/anthony/docker-volumes/bind-dns/config:/etc/bind"
#     - "/home/anthony/docker-volumes/bind-dns/cache:/var/cache/bind"
#     - "/home/anthony/docker-volumes/bind-dns/records:/var/lib/bind"
#   ports:
#     - "53:53/udp"
#     - "53:53/tcp"
#   env:
#     BIND9_USER: 'root'
#     TZ: "{{ timezone }}"
#   restart_policy: unless-stopped

# duckdns
- name: duckdns
  docker_container:
    name: duckdns
    image: linuxserver/duckdns@sha256:a0f2c505b3f3b2472872310f7936939c7fbd15c20f301221b9f353891a629931
    volumes:
      - "/home/anthony/docker-volumes/duckdns/config:/config"
    env:
      PUID: "1000"
      PGID: "1000"
      TZ: "{{ timezone }}"
      SUBDOMAINS: "{{ ddns_subdomains }}"
      TOKEN: "{{ ddns_token }}"
    restart_policy: unless-stopped

# wireguard
- name: wireguard
  docker_container:
    name: wireguard
    image: linuxserver/wireguard:latest
    ports:
      - "51820:51820/udp"
    volumes:
      - "/home/anthony/docker-volumes/wireguard/config:/config"
      - "/lib/modules:/lib/modules"
    env:
      PUID: "1000"
      PGID: "1000"
      SERVERURL: "mole-homelab.duckdns.org"
      PEERS: "desktop,laptop,phone,tablet"
      INTERNAL_SUBNET: 10.13.13.0/24
      TZ: "{{ timezone }}"
    capabilities:
      - net_admin
      - sys_module
    sysctls:
      net.ipv4.conf.all.src_valid_mark: 1
    restart_policy: unless-stopped

# mosquitto
- name: mosquitto
  docker_container:
    name: mosquitto
    image: eclipse-mosquitto:1.6.12
    ports:
      - "1883:1883"
    volumes:
      - "/home/anthony/docker-volumes/mosquitto/data:/data"
      - "/home/anthony/docker-volumes/mosquitto/config:/config"
      - "/home/anthony/docker-volumes/mosquitto/logs:/logs"
    env:
      PUID: "1000"
      PGID: "1000"
    networks:
      - name: "traefik"
    restart_policy: unless-stopped

# home assistant
- name: home-assistant
  docker_container:
    name: home-assistant
    image: homeassistant/home-assistant:2025.3    
    network_mode: 'host'
    volumes:
      - "/home/anthony/docker-volumes/hass/config:/config"
    env:
      TZ: "{{ timezone }}"
    devices:
      - "/dev/serial/by-id/usb-ITEAD_SONOFF_Zigbee_3.0_USB_Dongle_Plus_V2_20230525115147-if00:/dev/ttyACM0"
    restart_policy: unless-stopped

# node-red data
- name: create node-red volume
  docker_volume:
    name: nodered_data

# node-red
- name: node-red
  docker_container:
    name: node-red
    image: nodered/node-red:4.0
    ports:
      - "1880:1880"
    volumes:
      - "nodered_data:/data"
    networks:
      - name: "traefik"
    restart_policy: unless-stopped

# netboot-xyz
- name: netboot server
  docker_container:
    name: netboot-xyz
    image: linuxserver/netbootxyz:0.7.5
    ports:
      - "3110:3000"
      - "69:69/udp"
      - "8383:80"
    volumes:
      - "{{ docker_path }}/netboot-xyz/config:/config"
      - "{{ docker_path }}/netboot-xyz/assets:/assets"
    env:
      PUID: "1000"
      PGID: "1000"
      TZ: "{{ timezone }}"
    networks:
      - name: "traefik"
    restart_policy: unless-stopped

- name: omada-controller
  docker_container:
    name: omada
    image: mbentley/omada-controller:5.15
    ports:
      - "8088:8088"
      - "8043:8043"
      - "27001:27001/udp"
      - "29810:29810/udp"
      - "29811-29816:29811-29816"
    volumes:
      - "{{ docker_path }}/omada/logs:/opt/tplink/EAPController/data"
      - "{{ docker_path }}/omada/data:/opt/tplink/EAPController/logs"
    env:
      TZ: "{{ timezone }}"
    restart_policy: unless-stopped

- name: create n8n volume
  docker_volume:
    name: n8n_data

- name: n8n automation
  docker_container:
    name: n8n-server
    image: docker.n8n.io/n8nio/n8n 
    ports:
      - "5678:5678"
    volumes:
      - "n8n_data:/home/node/.n8n"
    env:
      TZ: "{{ timezone }}"
      N8N_SECURE_COOKIE: "false"
    restart_policy: unless-stopped

#- name: prefect server
# docker_container:
#   name: prefect-server
#   image: prefecthq/prefect:3.1.6-python3.11
#   ports:
#     - "4200:4200"
#   volumes:
#     - "{{ docker_path }}/prefect:/root/.prefect"
#   entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "server", "start"]
#   env:
#     PREFECT_UI_URL: "http://172.24.10.11:4200/api"
#     PREFECT_API_URL: "http://172.24.10.11:4200/api"
#     PREFECT_SERVER_API_HOST: "0.0.0.0"
#   restart_policy: unless-stopped

# prometheus
- name: prometheus
  docker_container:
    name: prometheus
    image: prom/prometheus:v3.2.1
    ports:
      - "9090:9090"
    volumes:
      - "{{ docker_path }}/prometheus:/etc/prometheus"
    networks:
      - name: "traefik"
    restart_policy: unless-stopped

# snmp exporter
- name: snmp-exporter
  docker_container:
    name: snmp-exporter
    image: prom/snmp-exporter
    ports:
      - "9116:9116"
    networks:
      - name: "traefik"
    restart_policy: unless-stopped

- name: prefect server
  docker_container:
    name: prefect-server
    image: prefecthq/prefect:3.2.13-python3.11
    ports:
      - "4200:4200"
    volumes:
      - "{{ docker_path }}/prefect:/root/.prefect"
    entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "server", "start"]
    env:
      PREFECT_UI_URL: "http://172.24.10.10:4200/api"
      PREFECT_API_URL: "http://172.24.10.10:4200/api"
      PREFECT_SERVER_API_HOST: "0.0.0.0"
    restart_policy: unless-stopped
