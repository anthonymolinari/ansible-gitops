---
- name: create network for all services
  docker_network:
    name: traefik

- name: create network for grafana, loki, promtail, prometheus
  docker_network:
    name: metrics

# traefik 
- name: traefik reverse proxy
  docker_container:
    name: traefik
    image: traefik:v2.11
    ports:
      - "80:80"
      - "443:443"
      - "81:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    command: ["--api.insecure=true", "--providers.docker"]
    networks:
      - name: "traefik"
    restart_policy: unless-stopped

- name: create persistent volume for grafana
  docker_volume:
    name: grafana_data

# grafana
- name: grafana
  docker_container:
    name: grafana
    image: grafana/grafana:11.1.3
    ports:
      - "3000:3000"
    networks:
      - name: "metrics"
      - name: "traefik"
    volumes:
      - "grafana_data:/var/lib/grafana"
    labels:
      traefik.http.routers.grafana.rule: "Host(`grafana.homelab.lan`)"
      traefik.http.services.grafana.loadbalancer.server.port: "3000"
    restart_policy: unless-stopped

# loki
- name: loki
  docker_container:
    name: loki
    image: grafana/loki:3.1.1
    command: ["-config.file=/etc/loki/loki-config.yml", "-target=all"]
    volumes:
      - "{{ docker_path }}/loki/loki-config.yml:/etc/loki/loki-config.yml"
    ports:
      - "3100:3100"
    networks:
      - name: "metrics"
      - name: "traefik"
    restart_policy: unless-stopped

# promtail
- name: promtail
  docker_container:
    name: promtail
    image: grafana/promtail:3.1.1
    #    command: ["config.file=/etc/promtail/promtail-config.yml"]
    volumes:
      - "{{ docker_path }}/promtail/promtail-config.yml:/etc/promtail/promtail-config.yml"
      - "/var/log:/var/log"
    networks:
      - name: "metrics"
    restart_policy: unless-stopped

# prometheus
- name: prometheus
  docker_container:
    name: prometheus
    image: prom/prometheus:v2.54.0
    ports:
      - "9090:9090"
    volumes:
      - "{{ docker_path }}/prometheus:/etc/prometheus"
    networks:
      - name: "metrics"
    restart_policy: unless-stopped

# snmp exporter
- name: snmp-exporter
  docker_container:
    name: snmp-exporter
    image: prom/snmp-exporter
    ports:
      - "9116:9116"
    networks:
      - name: "metrics"
    restart_policy: unless-stopped

# minio
- name: minio
  docker_container:
    name: minio
    image: minio/minio@sha256:6f23072e3e222e64fe6f86b31a7f7aca971e5129e55cbccef649b109b8e651a1 
    command: ["server", "/data", "--console-address", ":9001"]
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - "{{ docker_path }}/minio/data:/data"
    networks:
      - name: "metrics"
      - name: "traefik"
    restart_policy: unless-stopped

# proxmox exporter
#- name: proxmox exporter
# docker_container:
#   name: proxmox-exporter
#   image:
#   volumes:
#   ports:
#   restart_policy: unless-stopped

